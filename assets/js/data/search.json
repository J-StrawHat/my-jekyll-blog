[ { "title": "计算机网络错题汇总", "url": "/posts/NetWorkSummary/", "categories": "其他知识技术分享, 计算机网络", "tags": "计算机网络", "date": "2021-06-18 00:00:00 +0800", "snippet": "Chap 2. 物理层 编码 -&amp;gt; 基带调制 光纤分为多模光纤和单模光纤 奈奎斯特定理：理想低通信道下的极限数据传输率 = $2W\\log_2{V}$ $W$ 是带宽（单位：Hz），$V$ 表示每个码元离散电平的数目（比如16种码元，需要4位二进制位） Chap 3. 数据链路层 数据通信控制规程分为两类：面向字符的和面向字节的 网络接口卡（NIC）位于OSI模型的数据链路层 数据链路层的功能： 为网络层提供服务 ..." }, { "title": "马原复习", "url": "/posts/%E9%A9%AC%E5%8E%9F%E5%A4%8D%E4%B9%A0/", "categories": "人文社科, 政治", "tags": "马克思原理", "date": "2021-06-13 00:00:00 +0800", "snippet": "Chap1. 导论马克思主义构成之间的联系马克思用马哲（马克思主义哲学）的方法，研究并编写政经（马克思主义政治经济学）的理论，得出科社（科学社会主义）的结论。马克思主义的基本立场、基本观点和基本方法 基本立场：无产阶级、人民 基本观点（内容）：关于自然、社会和人类思维发展…人类思想成果和社会实践… 基本方法：辩证唯物主义和历史唯物主义马克思主义的来源世界第一个无产阶级政党：共产主义者同盟马克思主义公开问世的标志：《共产党宣言》的发表产生的条件： 社会根源：资本主义生产方式的发展 阶级基础（实践基础）：无产阶级在反抗资产阶级剥削和压迫的斗争 思想渊源：德国古典哲学、英国古典政治..." }, { "title": "「数据库系统概论」大题总结", "url": "/posts/%E5%A4%A7%E9%A2%98%E6%80%BB%E7%BB%93/", "categories": "DataBase, MySQL", "tags": "SQL, DataBase", "date": "2021-06-10 19:47:53 +0800", "snippet": " 试述数据、数据库、数据库系统、数据库管理系统的概念。 答： 数据： 描述事物的符号记录称为数据。 数据的种类有文字、图形、图像、声音、正文等等。数据与其语义是不可分的。 数据库： 长期储存在计算机内、有组织的、可共享的大量数据集合。数据库中的数据按一定的数据模型组织、描述和储存，具有较小的冗余度、较高的数据独立性和易扩展性，并可为各种用户共享。 数据库系统： 是由数据库、数据库管理系统及其应用开发工具 、应用程序、数据库管理员组成的存储、管理、处理和维护数据的系统。 数据库管理系统：是位于用户与操作系统之间的一层数据管理软件。..." }, { "title": "「JavaSE学习笔记10」Java 易错归纳", "url": "/posts/Java%E6%98%93%E9%94%99%E5%BD%92%E7%BA%B3/", "categories": "Java, JavaSE", "tags": "JavaSE", "date": "2021-06-06 21:04:00 +0800", "snippet": "Chapter 1 概述Java跨平台Java 既具有解释型语言的特征，也具有编译型语言的特征。 Java既不是编译型语言也不是解释型语言，还是静态语言。Java语言经过编译器编译后生成与平台无关的字节码文件（*.class，需要由Java解释器来解释执行） 不同操作系统有不同的虚拟机，但提供一个相同的面向编译器的接口。 只要为不同平台实现了相应的虚拟机，编译之后的Java字节码就可以在该平台上运行编译与运行Java源文件举例如下：java命令运行文件，紧跟于java文件中的类名，如java HelloWorld（注意，java命令针对于 class 文件，但是在输入命令时不加.c..." }, { "title": "数电简要总结", "url": "/posts/%E6%95%B0%E7%94%B5/", "categories": "其他知识技术分享, 计算机电路基础", "tags": "电路, 数电", "date": "2021-05-26 00:00:00 +0800", "snippet": "Chap 1. 数制和码制 ASCII是一组七位二进制代码，共127个Chap 2. 逻辑代数常用公式 $A+B=A+C$ 或者 $AB=AC$，均不能推出 $B=C$ $A+BC=(A+B)(A+C)$ 证明：$右式=AA+AC+AB+BC=A(1+C+B)+BC=A+BC$ $A(A+B)=A+AB=A$ $A+\\overline{A}B=A+B$ $AB+\\overline{A}C+BCD…=AB+\\overline{A}C$ 应用：$Y=A..." }, { "title": "MyBatis 学习笔记", "url": "/posts/MyBatis/", "categories": "DataBase, MyBatis", "tags": "SQL, DataBase, MyBatis", "date": "2021-03-07 13:38:53 +0800", "snippet": "Chapter 1. 框架概述1.1 三层架构三层架构所包含的三层： 界面层（User Interface Layer）：主要功能为接收用户的数据，显示请求的处理结果。 业务逻辑层（Business Logic Layer）：接收表示传递过来的数据，检查数据，计算业务逻辑，调用数据访问层获取数据。 数据访问层（Data Access Layer）：与数据库打交道，主要实现对数据的增、删、改、查。将存储在数据库中的数据提交给业务层，同时将业务层处理的数据保存到数据库。处理请求的交互：用户-&amp;gt;界面层-&amp;gt;业务逻辑层-&amp;gt;数据访问层-&amp;gt;..." }, { "title": "「JavaWeb学习笔记08」项目管理工具 Maven", "url": "/posts/Maven/", "categories": "Java, JavaWeb", "tags": "JavaWeb, Maven", "date": "2021-03-03 23:34:40 +0800", "snippet": "Chapter 13. Maven13.1 Maven 概述 传统项目开发中，需要数量众多的 jar 包，需手动下载并引入，同时，jar 包有版本兼容的问题，一个 jar 包可能要依赖其他的 jar 包，需要手动解决。此外，多个项目间需要的 jar 包有可能重复。Maven 是 Apache 软件基金会组织维护的一款自动化构建工具，专注服务于 Java 平台的项目构建和依赖管理，对生产环境下多框架、多模块整合开发有重要作用。 项目设置遵循统一的规则 任意工程中共享 整合多个项目之间的引用关系 提供规范的管理各个常用的 jar 包及其各个版本，并且可以自动下载和引入项目中 能够..." }, { "title": "AJAX 与 JSON", "url": "/posts/Ajax%E4%B8%8EJSON/", "categories": "Web前端, AJAX", "tags": "AJAX, JSON", "date": "2021-03-03 16:07:27 +0800", "snippet": "AJAX一、概述AJAX，Asynchronous JavaScript and XML（异步的 JavaScript 和 XML）。它并不是新的编程语言，而是一种用于创建快速动态网页的技术。 此处的异步与同步分别指，在客户端和服务器端相互通信的基础上， 同步：客户端必须等待服务器端的响应，在等待的期间客户端不能做其他操作； 异步：客户端无需等待服务器端的响应，在服务器处理请求的过程中，客户端可进行其他的操作。 AJAX ，故其最大的优点为，不重新加载整个页面的情况下，可与服务器进行少量数据交换并更新部分网页内容。AJAX，不需要任何浏览器插件，但需用户允许 Java..." }, { "title": "「jQuery 学习笔记02」动画、对象遍历、事件", "url": "/posts/LearningjQuery02/", "categories": "Web前端, jQuery", "tags": "jQuery, JS", "date": "2021-03-02 15:35:00 +0800", "snippet": "Chapter 4. 动画其中下面各方法的三个参数： speed：指动画的速度，预定义值有：&quot;slow&quot;、&quot;normal&quot;、&quot;fast&quot; 或表示动画时长的毫秒数值（如：1000） easing：用来指定切换效果，默认值：&quot;swing&quot;（动画执行效果是“先慢，中间快，最后慢”），另外的预定义值为 &quot;linear&quot;（动画执行速度匀速） fn：在动画完成时执行的函数，每个元素执行一次4.1 默认的显示和隐藏方式 show(speed, easing, fn) hide(speed, e..." }, { "title": "「jQuery 学习笔记01」选择器、DOM操作", "url": "/posts/LearningJQuery/", "categories": "Web前端, jQuery", "tags": "jQuery, JS", "date": "2021-03-01 11:42:00 +0800", "snippet": "Chapter 1. 概述1.1 概念jQuery 是一个快速、简洁的 JavaScript 框架，是继 Prototype 之后又一个优秀的 JavaScript 代码库。它封装了 JavaScript 常用的功能代码，提供一种简便的 JavaScript 设计模式，优化 HTML 文档操作、事件处理、动画设计和 Ajax 交互。1.2 快速入门 （下载并）引入 jQuery 到网页中，可使用两种方法： 从 https://jquery.com/download/ 下载 jQuery 库 &amp;lt;head&amp;gt;..." }, { "title": "「JavaWeb学习笔记07」过滤器(Filter)与监听器(Listener)", "url": "/posts/Filter%E4%B8%8EListener/", "categories": "Java, JavaWeb", "tags": "JavaWeb", "date": "2021-02-26 14:15:00 +0800", "snippet": "Chapter 12. 过滤器 Filter 与监听器(Listener)12.1 过滤器概述过滤器，能够对一部分客户请求先进行预处理操作，然后再把请求转发给响应的 Web 组件，等到 Web 组件生成了响应结果后，过滤器还能对响应结果进行检查和修改，然后再把修改后的响应结果发送给客户。 各个 Web 组件中的相同操作可放到同一个过滤器中来完成，这样即能减少重复编码。具体来说，过滤器为 Web 组件（如 Servlet、JSP 或 HTML）提供如下过滤功能： 在 Web 组件被调用之前检查 ServletRequest 对象，修改请求头和请求正文的内容，或者对请求进行预处理操作。 ..." }, { "title": "「JavaWeb学习笔记06」JSP技术、MVC", "url": "/posts/JSP%E6%8A%80%E6%9C%AF/", "categories": "Java, JavaWeb", "tags": "JavaWeb, JSP, JSTL, EL表达式", "date": "2021-02-25 23:55:00 +0800", "snippet": "以后再填坑。" }, { "title": "「JavaWeb学习笔记05」会话及其技术应用", "url": "/posts/%E4%BC%9A%E8%AF%9D/", "categories": "Java, JavaWeb", "tags": "JavaWeb, Cookie", "date": "2021-02-25 17:28:00 +0800", "snippet": "Chapter 8. 会话技术8.1 会话机制HTTP 是无状态的协议（对于事务处理没有记忆能力），必须在 HTTP 请求中加入一些额外的用于跟踪客户状态的数据。在 Web 开发中，会话机制，便是用于跟踪客户状态的普遍解决方案（使用 ASP、PHP 或 JSP 开发的 Web 应用都可以运用会话机制）。会话，指在一段时间内，单个客户与 Web 应用的一连串相关的交互过程。在一个会话中，客户可能会多次请求访问 Web 应用的同一个网页，也有可能请求方法同一个 Web 应用中的多个网页。8.2 Cookie8.2.1 Cookie基本运作机制Cookie，是在客户端访问 Web 服务器时，服..." }, { "title": "「JavaWeb学习笔记04」请求与响应", "url": "/posts/HTTP%E4%B8%8ERequest%E5%8F%8AResponse/", "categories": "Java, JavaWeb", "tags": "JavaWeb, HTTP", "date": "2021-02-21 18:30:00 +0800", "snippet": "Chapter 5. HTTP5.1 HTTP 概述HTTP 协议（Hypertext Transfer Protocol，超文本传输协议），顾名思义，即关于如何在网络上传输超文本（即 HTML 文档）的协议。HTTP协议，规定了 Web 的基本运作过程，以及浏览器与 Web 服务器之间的通信细节。特点： 在分层的网络体系结构中，HTTP协议位于应用层，建立在 TCP/IP 协议的基础上。 默认端口号是 80。 HTTP 协议，规定 Web 基本运作过程基于客户/服务器通信模式：客户端主动发出 HTTP 请求，服务器端接收 HTTP 请求，再..." }, { "title": "「JavaWeb学习笔记03」Tomcat使用与Servlet基础", "url": "/posts/Servlet/", "categories": "Java, JavaWeb", "tags": "JavaWeb, Servlet, 配置", "date": "2021-02-20 21:03:00 +0800", "snippet": "Web 是一种分布式应用架构，旨在共享发布在网络上的各个Web服务器中的所有互相链接的信息。WWW（World Wide Web） 是指全球范围内的 Web，它以 Internet 为网络平台。Internet 是来自世界各地的众多相互连接的计算机和其他设备的集合，而 WWW 则是 Internet 上的一种分布式应用架构。《Tomcat 与 Java Web 开发技术详解（第2版）》讲述，为了能让 Web 服务器与 Web 应用这两个不同的软件系统协作，首先应该由一个中介方制订 Web 应用与 Web 服务器进行协作的标准接口，而Servlet 就是其中最主要的一个接口。中介方规定：..." }, { "title": "XML 学习笔记", "url": "/posts/LearningXML/", "categories": "Java, JavaWeb", "tags": "JavaWeb, XML", "date": "2021-02-19 16:03:00 +0800", "snippet": "一、XML 概述XML 指可拓展标记语言（EXtensible Markup Language），可拓展指的是，XML 标签并没有被预定义，需要自行定义标签。XML 是 W3C 的推荐标准，语法极为严格。XML的自我描述性XML 标签具有自我描述性，如下举例：&amp;lt;note&amp;gt;&amp;lt;to&amp;gt;Nami&amp;lt;/to&amp;gt;&amp;lt;from&amp;gt;Luffy&amp;lt;/from&amp;gt;&amp;lt;heading&amp;gt;Reminder&amp;lt;/heading&amp;gt;&amp;..." }, { "title": "Bootstrap 学习笔记", "url": "/posts/LearningBootstrap/", "categories": "Web前端, Bootstrap", "tags": "Bootstrap, 配置", "date": "2021-02-19 10:30:00 +0800", "snippet": "Bootstrap 是 HTML、CSS 和 JS 的一个框架，用于开发响应式布局、移动设备优先的 WEB 项目。一、Bootstrap 概述Bootstrap 包的内容 基本结构：Bootstrap 提供了一个带有网格系统、链接样式、背景的基本结构。 CSS：Bootstrap 自带以下特性：全局的 CSS 设置、定义基本的 HTML 元素样式、可扩展的 class，以及一个先进的网格系统。 组件：Bootstrap 包含了十几个可重用的组件，用于创建图像、下拉菜单、导航、警告框、弹出框等等。 JavaScript 插件：Bootstrap 包含了十几个自定义的 jQuery ..." }, { "title": "「JavaScript学习笔记02」事件、BOM、DOM", "url": "/posts/JS02/", "categories": "Web前端, JavaScript", "tags": "JS", "date": "2021-02-14 10:19:00 +0800", "snippet": "深圳的小梅沙真的治愈啊Chapter 1. 事件1.1 事件监听机制事件监听机制，即某些组件被执行了某些操作后，触发某些代码的执行。 事件：某些操作。如：单击 事件源：组件。如：按钮、文本输入框 监听器：代码 注册监听：将事件、事件源、监听器结合在一起，当事件源上发生了某个事件，则触发执行某个监听器的代码。有两个方式，绑定事件： 方式一：直接在 HTML 标签上，指定事件的属性，其属性值即是 JS 代码 &amp;lt;body&amp;gt; &amp;lt;img id = &quot;light&quot; sr..." }, { "title": "「JavaScript学习笔记01」基础语法", "url": "/posts/JS1/", "categories": "Web前端, JavaScript", "tags": "JS", "date": "2021-02-10 23:19:00 +0800", "snippet": " HTML是一种标记语言，用来结构化我们的网页内容并赋予内容含义，例如定义段落、标题和数据表，或在页面中嵌入图片和视频。 CSS 是一种样式规则语言，可将样式应用于 HTML 内容， 例如设置背景颜色和字体，在多个列中布局内容。 JavaScript 是一种脚本语言，可以用来创建动态更新的内容，控制多媒体，制作图像动画，等等。Chapte 1. 基础语法1.1 概述JavaScript 是轻量级解释型语言。它是可插入 HTML 页面的编程代码，每一个浏览器都有 JavaScript 的解析引擎，故 JavaScript 不需要编译，直接就能被浏览器解析执行了（即，它是运行在浏览器中..." }, { "title": "「JavaWeb学习笔记02」数据库连接池", "url": "/posts/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%B1%A0/", "categories": "Java, JavaWeb", "tags": "JavaWeb, MySQL, 配置", "date": "2021-02-08 22:03:00 +0800", "snippet": "Chapter 2. 数据库连接池2.1 引言数据库连接池，负责分配、管理和释放数据库连接，它允许应用程序重复使用一个现有的数据库连接，而不是再重新建立一个。2.1.1 数据库连接池的原理连接池基本思想是，在系统初始化的时候，将数据库连接作为对象存储在内存中，当用户需要访问数据库时，并非建立一个新的连接，而是从连接池中取出一个已建立的空闲连接对象。使用完毕后，用户也并发将连接关闭，而是将连接放回连接池中，以供下一个请求访问使用。而连接的建立、断开都由连接池自身来管理。2.1.2 数据库连接池影响因素数据库连接池在初始化时将创建一定数量的数据库连接放到连接池中，这些数据库连接的数量是由最小..." }, { "title": "「JavaWeb学习笔记01」JDBC 编程", "url": "/posts/JDBC/", "categories": "Java, JavaWeb", "tags": "JavaWeb, MySQL, 配置", "date": "2021-02-07 17:35:00 +0800", "snippet": "Chapter 1. JDBC1.1 JDBC 概述 客户端操作 MySQL 数据库的方式： 使用第三方客户端（如：SQLyog、Navicat 等）来访问； 通过 MySQL 自带的命令行方式； 通过 Java 来访问 MySQL 数据库 Java 数据库连接，Java Database Connectivity （简称 JDBC），是一套面向对象的应用程序接口，指定了统一的访问各种类型数据库的标准接口。JDBC是一种底层的API（Application Programming Interface，应用程序接口），是连接数据库和Java应用程序的纽带，因此我们..." }, { "title": "「JavaSE学习笔记09」Junit、反射、注解", "url": "/posts/Junit-%E5%8F%8D%E5%B0%84-%E6%B3%A8%E8%A7%A3/", "categories": "Java, JavaSE", "tags": "JavaSE", "date": "2021-02-04 23:51:00 +0800", "snippet": "Chapter 15. Junit单元测试15.1 软件测试方法 白盒测试（结构测试）：测试者清楚待测试对象内部工作机制，该测试是开发者测试自己设计编码的代码。而接下来要讨论的 Junit 即是基于白盒测试 黑盒测试（功能测试）：通过测试检验是否每个功能都能正常工作，检查程序功能是否按规格说明书的规定正常使用，这是在程序接口进行的测试。15.2 Junit使用步骤 定义一个测试类，命名建议如下： 测试类的名称：被测试的类名Test.java，如CalculatorTest； 包名称：xxx.xxx.xx.test 定义测试方..." }, { "title": "2021年的杂言碎语", "url": "/posts/2021%E5%B9%B4%E6%9D%82%E8%A8%80%E7%A2%8E%E8%AF%AD/", "categories": "随笔杂谈与感悟, 感悟", "tags": "感悟, 杂谈", "date": "2021-02-04 21:41:00 +0800", "snippet": "五月05/31真的很难受。四月04/17LeetCode 100题纪念~二月02/02无奈Cloudfare速度不太快，而且希望百度能够收录这个博客，偶然间在谷歌上看到一篇关于通过ZEIT (Vercel)享受免费CDN的心得，于是试着将原本DNS为 Cloudfare 家的域名解析到 ZEIT (Vercel) 家的DNS。怀着忐忑心理测了下速度，这速度飞跃看下图，Vercel yyds!02/01买到了自己的域名，解析挺顺利的。希望能够解决之前Github Page的偶尔抽风吧。既然有了域名，那就可以给GitHub Page套上CDN加速了。（没有服务器主机，备不了案呀现在明白谷歌搜..." }, { "title": "「MySQL学习笔记05」数据库恢复与事务", "url": "/posts/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%81%A2%E5%A4%8D%E4%B8%8E%E4%BA%8B%E5%8A%A1/", "categories": "DataBase, MySQL", "tags": "MySQL, DataBase", "date": "2021-02-01 21:30:53 +0800", "snippet": "5.1 数据库的备份还原方法5.1.1 命令行方法 备份： mysqldump -u用户名 -p密码 数据库名称 &amp;gt; 保存路径 举例如下： 注意，盘符分隔符用//。 另外，建议用 CMD 而不是 PowerShell 去导出（出锅了） 此时，在E盘得到这个备份文件： 还原： 假如数据库stu被删掉，我们可以通过之前保存的.sql备份文件去还原： 首先创建一个数据库并使用它： CREATE DATABASES db1;US..." }, { "title": "「MySQL8.0」ERROR 1045 (28000):Access denied for user &#39;ODBC&#39;@&#39;localhost&#39;解决方案", "url": "/posts/Error1045/", "categories": "DataBase, MySQL", "tags": "MySQL", "date": "2021-01-31 23:31:35 +0800", "snippet": "我的 Windows 装了mysqld后，登录 MySQL 时就出现了报错提示：🤕MySQL Workbench等其他软件也一样无法登录进我的数据库….根据网上文章，可能是装完 mysqld 后导致密码发生了更改。（好家伙，我的密码明明就没动过….接下来就需要我们重置 自己设置的MySQL数据库密码了。 我所装的 MySQL 版本号是8.0，其方法的差别在于第二点的SQL语句，已做区分。一、设置跳过 MySQL 密码认证跳过密码认证，我们就能成功登陆 MySQL，然后利用SQL重新设置用户的密码。首先，找到 my.ini 文件，默认路径一般如下：Ctrl+F 搜索 [mysqld]，然..." }, { "title": "「MySQL学习笔记04」数据库完整性与设计", "url": "/posts/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%8C%E6%95%B4%E6%80%A7%E4%B8%8E%E8%AE%BE%E8%AE%A1/", "categories": "DataBase, MySQL", "tags": "MySQL", "date": "2021-01-30 15:21:00 +0800", "snippet": "4.1 数据库的完整性4.1.1 数据库完整性的概述数据库的完整性（integrity）是指数据的正确性（correctness）和相容性（compat-ability）。 数据的正确性：指数据是符合现实世界语义、反映当前实际状况的； 数据的相容性：指数据库同一对象在不同关系表中的数据是符合逻辑的；数据的完整性，是为了防止数据库中存在不符合语义的数据，即存在不正确的数据。 数据的安全性，是保护数据库防止恶意破坏和非法存取。防范对象是非法用户和非法操作。数据库完整性的定义一般由SQL的数据定义语言（DDL）来实现，它们作为数据库模式的一部分存入数据字典中，在数据库数据修改时，关系数据..." }, { "title": "「MySQL学习笔记03」SQL（下）— DQL", "url": "/posts/SQL%E4%B8%8B/", "categories": "DataBase, MySQL", "tags": "MySQL", "date": "2021-01-29 15:03:00 +0800", "snippet": "3.5 DQL-单表记录查询3.5.1 基础查询 查询表中所有行和列的数据（使用 * 表示所有列） SELECT * FROM 表名; 查询指定列 SELECT 列名1, 列名2, ... FROM 表名; 查询指定列并起别名 SELECT 原列名1 AS 别名1, 原列名2 AS 别名2, ... FROM 表名; SELECT 原列名1 AS 别名1, 原列名2 AS 别名2, ... FROM 表名 AS 表的别名; /* 查询后得到的表 也起别名，常用于多表查询操作中 */ 查..." }, { "title": "「MySQL学习笔记03」SQL（上）— DDL、DML、DCL", "url": "/posts/SQL%E4%B8%8A/", "categories": "DataBase, MySQL", "tags": "MySQL", "date": "2021-01-28 13:46:00 +0800", "snippet": "3.1 SQL 概述结构化查询语言（Structured Query Language, SQL）是关系数据库的标准语言，其功能不仅仅是查询，而是包括数据库模式创建、数据库数据的插入与修改、数据库安全性完整性定义与控制等一系列功能。有一些计算可用通用的程序设计语言来表达，但无法通过SQL来表达；SQL还不支持诸如从用户那输入、输出到显示器，或者通过网络通信这样的动作。这样的计算和动作必须用一种宿主语言来写，比如C、C++或Java，在其中使用嵌入式的SQL查询来访问数据库中的数据。3.1.1 SQL语句分类 DDL（Data Definition Language，数据定义语言）用来定..." }, { "title": "「MySQL学习笔记02」MySQL环境搭建", "url": "/posts/MySQL%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E5%8F%8ASQL%E5%9F%BA%E7%A1%80/", "categories": "DataBase, MySQL", "tags": "MySQL", "date": "2021-01-27 22:20:00 +0800", "snippet": "数据库管理系统（DBMS）中，关系数据库管理系统，采用关系模型作为数据的组织方式。 MySQL：开源免费的数据库，小型的数据库。（Sun公司收购了MySQL，而Sun公司又被Oracle收购） Oracle：收费的大型数据库，Oracle公司的产品。 SQL Server：Microsoft 公司收费的中型的数据库。C#、.net等语言常使用。2.1 MySQL安装及卸载 The official way to pronounce “MySQL” is “My Ess Que Ell”2.1.1 安装与配置 教程：MySQL数据库安装指南（知乎建议的是5.7.30版本） 默认..." }, { "title": "「MySQL学习笔记01」数据库系统概念", "url": "/posts/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E5%BF%B5/", "categories": "DataBase, MySQL", "tags": "MySQL, DataBase", "date": "2021-01-25 22:20:00 +0800", "snippet": "1.1 数据库系统概述1.1.1 数据库数据库（DataBase, DB），按一定格式存放数据的仓库，而这个仓库是在计算机存储设备上的。严格定义：数据库是长期储存在计算机内、有组织的、可共享的大量数据的集合。数据库中的数据按一定的数据模型组织、描述和储存，具有较小的冗余度（redundancy）、较高的数据独立性（data independency）和易拓展性（scalability），并可为各种用户共享。 数据独立性，包括数据的 物理独立性 和 逻辑独立性。 物理独立性：用户的应用程序 与 数据库中数据的物理存储 是相互独立的 逻辑独立性：用户的应用程序 与 数据库的..." }, { "title": "毛中特复习", "url": "/posts/%E6%AF%9B%E4%B8%AD%E7%89%B9%E5%A4%8D%E4%B9%A0/", "categories": "人文社科, 政治", "tags": "毛泽东思想, 中国特色社会主义理论体系", "date": "2021-01-06 00:00:00 +0800", "snippet": "Chap1马克思主义中国化的内涵必要性： 中国需要 理论需要可能性： 中国需要都成立 理论需要都成立 相融性（马+中国传统文化）马克思主义中国化的历史进程一、毛泽东思想 毛泽东：党的六届六中全会、《论新阶段》、提出命题 延安整风，全党共识 党的七大正式二、中特社理论体系（第二大成果） 毛 不属于 中特社理论体系毛泽东思想形成发展的历史条件 时代背景：19ed 20st，帝国主义和无产阶级革命时代（或总称革命与战争） 实践基础 毛泽东思想有革命、有建设（中特只有建设） 毛泽东思想形成发展的过程（步骤）新民主主义革命理论、改造理论、探..." }, { "title": "电基&amp;模电简答题复习", "url": "/posts/%E7%94%B5%E5%9F%BA/", "categories": "其他知识技术分享, 计算机电路基础", "tags": "电路, 模电", "date": "2021-01-05 00:00:00 +0800", "snippet": "Chap1 电阻总是消耗（吸收）功率的 KCL：在电路中，任意时刻，对任意结点流出与流入该结点电流的代数和等于零。 KVL：在电路中，任一时刻，沿任一闭合路径绕行，各支路电压的代数和等于零。 叠加定理：在线性电路中，任一支路的电流(或电压)可以看成是电路中每一个独立电源单独作用于电路时，在该支路产生的电流(或电压)的代数和。 戴维南定理：一个含独立电源、线性电阻和受控源的二端网络，对外电路而言，可用电压US和电阻$R_{eq}$的串联组合来等效置换。 Chap2 换路：由于开关动作使电路的结构或参数发生变化。 ..." }, { "title": "Enable Google Page Views", "url": "/posts/enable-google-pv/", "categories": "Blogging, Tutorial", "tags": "google analytics, pageviews", "date": "2021-01-04 07:32:00 +0800", "snippet": "This post is to enable Page Views on the Chirpy theme based blog that you just built. This requires technical knowledge and it’s recommended to keep the google_analytics.pv disabled unless you have a good reason. If your website has low traffic, the page views count would discourage you to write ..." }, { "title": "「汇编学习记录03」实验大作业-数值运算与数据输出", "url": "/posts/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%9503/", "categories": "Programming Languages, Assembly Language", "tags": "Assembly", "date": "2020-12-30 00:00:00 +0800", "snippet": "本篇文章，是我们大二的汇编语言实验课的考核作业，在此记录下我的三百行代码吧hhh1、实验目的掌握通过键盘输入接收字符串、乘法运算、2/16 进制数与ASCII 码之间相互转换以及数据显示输出的程序设计方法。2、实验内容从键盘输入2个 \\(0–99\\) 之间的整数，对其做乘法运算，在屏幕上显示出该乘积对应的二进制和十六进制数。3、实验要求 在屏幕提示：&quot;please input the first number(0–99): &quot;后，输入一个0–99 之间的整数。若所输入的数不在此范围内，或输入其它字符，则屏幕提示：&quot;input an invalid numb..." }, { "title": "「汇编学习记录02」之程序设计技巧", "url": "/posts/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%9502%E4%B9%8B%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E6%8A%80%E5%B7%A7/", "categories": "Programming Languages, Assembly Language", "tags": "Assembly", "date": "2020-12-26 00:00:00 +0800", "snippet": "感谢曹老师的PPT、《汇编语言程序设计教程》（卜艳萍，清华出版社），仔细阅读后，自己提取并总结了这些技巧或方法。文中若有纰漏之处，恳请读者通过邮件向我指正。位运算技巧在汇编程序中的应用 寄存器初始化 举例使用： xor ax, ax ;将ax寄存器置零 判断寄存器是否为0 假如我们刚刚进行完除法运算，需要判断余数（默认存放在 DX 中）是否为0，我们可以对 DX 自身按位与，触发标志位影响，举例使用如下： and dx, dxjz next 求反的位同 1 异或，维持不变的位同 0 异或 检查某些..." }, { "title": "十分钟内将网络教学平台的ppt或pdf“扒”下来", "url": "/posts/%E7%BD%91%E7%BB%9C%E6%95%99%E5%AD%A6%E5%B9%B3%E5%8F%B0ppt/", "categories": "其他知识技术分享, Others", "tags": "", "date": "2020-12-01 00:20:00 +0800", "snippet": "“阴险”的语文老师，将583页的 复习资料PDF 上传到平台上😵，然而平台上阅读体验不佳（下图即能即表现出其加载慢，翻页麻烦，又不能留下自己的学习痕迹），必须得将这个文件下载下来！但是发现，老师并没有给出下载渠道，我们只能阅读却不能下载！😅没有储备多少前端知识的我，只能按下F12，进入火狐浏览器的开发者模式，摸索下是否能够找到这个583页pdf文件的源链接。经过观察，发现网络这一栏能够将这个pdf中每一页的png图片格式显示出来。点进去其中一个图片，将栏中带有链接的都点了一遍，发现Referer栏的链接，是个去掉样式的网页，但能够浏览所有页。我将这个网页另存下来（1G多），发现这个另存下..." }, { "title": "「Git学习笔记01」Git 分支", "url": "/posts/Git-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B002%E4%B8%A8Git-%E5%88%86%E6%94%AF/", "categories": "其他知识技术分享, Git", "tags": "Git", "date": "2020-12-01 00:00:00 +0800", "snippet": "几乎所有的版本控制系统都以某种形式支持分支。 使用分支意味着你可以把你的工作从开发主线上分离开来，以免影响开发主线。而 Git 的分支模型被称为它的“必杀技特性”，使得Git 从众多版本控制系统中脱颖而出。Git 的分支模型的学习，我是通过Learn Git Branching学习的，感谢他们的动画以及练习，本篇笔记正是总结自这个网站的。Git 本地分支命令1. 基础篇 Git Commit Git 仓库中的提交记录可看作是项目的快照，但非常轻量（将当前版本与仓库上一版本进行对比，将所有差异打包一起作为一个提交记录），保存了提交的历史记录。 $ git co..." }, { "title": "在Ubuntu 20.04配置FTP服务器", "url": "/posts/%E5%9C%A8Ubuntu-20.04%E9%85%8D%E7%BD%AEFTP%E6%9C%8D%E5%8A%A1%E5%99%A8/", "categories": "Operating Systems, Linux", "tags": "Linux", "date": "2020-11-28 00:00:00 +0800", "snippet": "感谢 linuxconfig.org 上的这篇英文教程FTP用于访问和传输本地网络上的文件，通过安装 VSFTPD 软件，打开热点，配置相关信息后即能够启动并运行FTP服务器了。1. 安装和配置VSFTPD在终端中输入指令以安装 VSFTPD$ sudo apt-get install vsftpd2. 设置 FTP 用户账号首先我们对原配置文件 vsftpd.conf 进行备份，避免待会的操作中出错。$ sudo mv /etc/vsftpd.conf /etc/vsftpd.conf_orig接着，我们通过编辑器（这里用vi）打开原来的配置文件。$ sudo vi /etc/vsft..." }, { "title": "Linux的用户和用户组管理", "url": "/posts/Linux%E7%9A%84%E7%94%A8%E6%88%B7%E5%92%8C%E7%94%A8%E6%88%B7%E7%BB%84%E7%AE%A1%E7%90%86/", "categories": "Operating Systems, Linux", "tags": "Linux", "date": "2020-11-27 00:00:00 +0800", "snippet": "Chapter 3. 用户和用户组管理由于Linux系统是一个多用户多任务的分时操作系统，任何一个要使用系统资源的用户，都必须首先向系统管理员申请一个账号，然后以该账号身份进入系统。3.0 用户与用户组相关信息 用户名：代表用户账号的字符串，最好不好包含.、-、+开头，不能含义:。 口令：存放加密后的用户口令字，真正的加密后的用户口令字存放在/etc/shadow文件中，而在/etc/passwd文件的口令字段只存放一个特殊的字符，如&#39;x&#39;或&#39;*&#39;。 用户标识号：一般而言，它与用户名是一一对应，但若几个用户名对应的用户标识号是一样的，系统内部将把它们..." }, { "title": "Linux文件系统、文件基本属性、目录处理及文件查看", "url": "/posts/Linux%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F-%E6%96%87%E4%BB%B6%E5%9F%BA%E6%9C%AC%E5%B1%9E%E6%80%A7-%E7%9B%AE%E5%BD%95%E5%A4%84%E7%90%86%E5%8F%8A%E6%96%87%E4%BB%B6%E6%9F%A5%E7%9C%8B/", "categories": "Operating Systems, Linux", "tags": "Linux", "date": "2020-11-25 00:00:00 +0800", "snippet": "Chapter 2. 文件系统2.1 Linux 系统目录结构命令窗口下输入命令: $ ls /，能够看到根目录下的全部目录及文件树状目录结构为：最顶级的目录： / ：根目录 / 是根目录，~ 是家目录。Linux 的目录结构为树状结构，源头即是 /，其他目录可通过挂载将它们添加到树中，解除挂载可以移除它们。而每个用户都有其家目录。比如说root用户的家目录是/root，普通用户a的家目录是/home/a。系统启动必须： /boot：存放的启动Linux 时使用的内核文件，包括连接文件以及镜像文件。 /etc：存放所有的系统需要的配置文件和子目录列表，更改目录..." }, { "title": "Linux 概述、常用快捷键、apt命令", "url": "/posts/Linux-%E6%A6%82%E8%BF%B0-%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE-apt%E5%91%BD%E4%BB%A4/", "categories": "Operating Systems, Linux", "tags": "Linux", "date": "2020-11-25 00:00:00 +0800", "snippet": "Chapter 1. Linux 概述Linux 是一种自由和开放源码的 Unix 操作系统， 是一个基于 POSIX 和 UNIX 的多用户、多任务、支持多线程和多CPU的操作系统。只要遵循 GNU 通用公共许可证（GPL），任何个人和机构均可自由地使用Linux的所有底层源代码。Linux 能运行主要的 UNIX 工具软件、应用程序和网络协议，继承了 Unix 以网络为核心的设计思想，一个性能稳定的多用户网络操作系统。1.2 Linux 发行版一个 Linux 发行版 包括 Linux 内核，以及 整个软件安装到电脑上的一套安装工具，还有各种GNU软件，和其他的一些自由软件，在一些L..." }, { "title": "Ubuntu系统安装、配置及软件教程集合", "url": "/posts/Ubuntu%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85-%E9%85%8D%E7%BD%AE%E5%8F%8A%E8%BD%AF%E4%BB%B6%E6%95%99%E7%A8%8B%E9%9B%86%E5%90%88/", "categories": "Operating Systems, Linux", "tags": "Linux", "date": "2020-11-24 00:00:00 +0800", "snippet": "1. Ubuntu系统安装Windows10安装ubuntu18.04双系统教程 Ubuntu 20.04.1 镜像下载 软碟通 机械革命进入BIOS模式 要按F2，注意将Boot Option中将U盘移到第一位。 安装完成后，可能要设置系统启动优先级2. 相关配置设置root密码$ sudo su更换国内源 备份sources.list $ sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak 更换源 输入以下指令，从而启动gedit打开文档进行编辑 sudo gedit..." }, { "title": "「JavaSE学习笔记08」网络编程", "url": "/posts/%E7%BD%91%E7%BB%9C/", "categories": "Java, JavaSE", "tags": "JavaSE", "date": "2020-11-21 21:22:00 +0800", "snippet": "Chapter 14. 网络编程网络编程，即使用编程语言实现多台计算机的通信。14.1 计算机网络入门当前节的知识点只是一个概述，更具体、详细的内容放在 计算机网络 中。14.1.1 软件结构 C/S结构（Client/Server结构）：指客户端与服务器结构，常见程序有QQ、迅雷等软件。 B/S结构（Browser/Server结构）：指浏览器与服务器结构。两种架构各有优势，无论哪种架构，都离不开网络的支持。网络编程，就是在一定的协议下，实现两台计算机的通信的程序。14.1.2 网络通信协议 网络通信协议：只有遵守这些规则，计算机之间才能进行通信。协议中对数据的传输格式、..." }, { "title": "CSUST &amp; CSDN 软件工程师联培班 考核筛选游记", "url": "/posts/CSUST&CSDN/", "categories": "随笔杂谈与感悟, 面经", "tags": "面经", "date": "2020-11-15 00:57:00 +0800", "snippet": "这算是我第一次参与的比较正式的面试了。经过报名表筛选、现场考核筛选，通过了选拔。对于现场考核，我所在的那一组共有13人，有三位评委老师（学校的，及CSDN的）。面试环节按照签到表的顺序，每个人进行1分钟限定的自我介绍。由于我没有专门准备这个，谈完软件开发兴趣及技术方面就已经到$1min$了，最重要的学业情况没在现场中及时地说出来QAQ。不过好在抓住主要思路，个人认为表达的时候还是比较流畅的。看到两位凡路大佬，还有某个部门的部长。几位学长学姐对后台开发已经有一定基础或者是有项目经验、比赛经验的（听不懂的技术）。笔试环节总共有9道大题，大部分大题，面试官会读两遍，并给你2分钟在纸上的作答时间..." }, { "title": "「汇编学习记录01」开发工具安装及编译运行第一个程序", "url": "/posts/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%9501%E4%B8%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85%E5%8F%8A%E7%BC%96%E8%AF%91%E8%BF%90%E8%A1%8C%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%A8%8B%E5%BA%8F/", "categories": "Programming Languages, Assembly Language", "tags": "Assembly", "date": "2020-11-14 00:00:00 +0800", "snippet": "汇编语言开发工具安装首先安装VS Code（建议下载最新版，否则有可能会与的下面拓展版本不兼容）安装完成VS Code后，点击拓展——搜索MASM/TASM拓展——安装。由于课程需要，我会选择MASM作为汇编工具，选择DOSBox作为16位模拟器，这些都可以在VSCode的拓展设置中进行设置，如下图：简单几步即可开始敲汇编代码了:smile:该拓展的Github地址戳这第一个汇编程序汇编程序从写出到执行的过程如下图，而VSCode+MASM/TASM拓展即直接将“编译-连接-加载”整合为一键执行了。:grinning:实验课代码如下：（注意，文件命名后缀为.asm）assume cs:c..." }, { "title": "「JavaSE学习笔记07」IO流", "url": "/posts/IO%E6%B5%81/", "categories": "Java, JavaSE", "tags": "JavaSE", "date": "2020-11-13 00:35:00 +0800", "snippet": "Chapter 13. IO流13.1 File类java.io.File类是文件（file）和目录（文件夹）（directory）路径名（path）的抽象表示，主要用于文件和目录的创建、查找和删除等操作。 一个File对象，代表硬盘中实际存在的一个文件或者目录（文件夹）。 绝对路径：从盘符开始的路径，是完整的路径。eg: D:\\\\aaa\\\\233.txt 相对路径：相对于项目目录的路径，是便携的路径（开发常用）。eg: 233.txt13.1.1 构造方法无论该路径下是否存在文件或者目录，都不影响File对象的创建。 public File(String pathnam..." }, { "title": "「JavaSE学习笔记06」并发", "url": "/posts/%E5%B9%B6%E5%8F%91/", "categories": "Java, JavaSE", "tags": "JavaSE", "date": "2020-11-12 17:02:00 +0800", "snippet": "Chapter 12. 并发12.1 并发与并行 并发：指两个或多个事件在同一个时间段内发生。 并行：指两个或多个事件在同一时刻发生（同时发生）。在操作系统中，并发指的是在一段时间内宏观上有多个程序同时运行。在单 CPU 系统中，每一时刻只能有一道程序执行，即微观上这些程序是分时的交替运行，而这个分时交替运行的时间是非常短的。 注意：单核处理器的计算机肯定是不能并行的处理多个任务的，只能是多个任务在单个CPU上并发运行。同理,线程也是一样的，从宏观角度上理解线程是并行运行的，但是从微观角度上分析却是串行运行的，即一个线程一个线程的去运行，当系统只有一个CPU时，线程会以某种顺序执行..." }, { "title": "第15届CSUST-ACM程序大赛游记", "url": "/posts/15thCSUST-ACM/", "categories": "随笔杂谈与感悟, 比赛经历", "tags": "感悟, 杂谈", "date": "2020-11-08 01:42:00 +0800", "snippet": "这算是我的第一次较正式的$ACM$团队比赛吧，真的感谢@dj、@qc两位大佬。:smile:开局就选了最后一题（因为哈希是他们集训队的猫），但三人无啥思路，于是溜回A题（发现有不少人已经过了）。dj很快进入状态，切了两题（dj拿下场内一血！）。码题之余，我感觉自己还没有进入状态，马上跑去读其他的题。尽管咱们队解题过程中间稍微出现了小磕绊，但是没有影响罚时，前期几道题基本都会爽快地一发即过。看了下榜，居然排到了rk3，大家都小小激动一波。此时场上好像只有@为神那队把G题过了，其他题没什么人交，只好跟着为神他们。G题大家都没有什么思路，只能把$k$范围确定下来。一开始我想到奇偶讨论$m$，但..." }, { "title": "「JavaSE学习笔记05」泛型、集合", "url": "/posts/%E6%B3%9B%E5%9E%8B-%E9%9B%86%E5%90%88/", "categories": "Java, JavaSE", "tags": "JavaSE", "date": "2020-11-05 00:43:00 +0800", "snippet": "Chapter. 10 泛型10.1 泛型程序设计泛型，指可以在类或方法中预支地使用未知的类型。泛型程序设计（Generic programming），意味着编写的代码可被很多不同类型的对象所重用。使用泛型机制编写的程序代码，要比那些杂乱使用Object变量然后再进行强制类型转换的代码具有更好的安全性和可读性。泛型对于集合类尤其有用，如集合类ArrayList。10.1.1 引入在Java SE5.0之前，Java泛型程序设计是用继承实现的。例如ArrayList类只维护一个Object引用的数组：public class JustTest{ //before Java SE 5.0 ..." }, { "title": "Leetcode 周赛#212 题解", "url": "/posts/LeetCode%E5%91%A8%E8%B5%9B212/", "categories": "Online Judge, LeetCode", "tags": "算法-并查集, 算法-最短路径", "date": "2020-11-04 09:45:00 +0800", "snippet": "1631. 最小体力消耗路径 #并查集 #最短路径题目链接题意给定一二维 rows x columns 的地图 heights ，其中 heights[row][col] 表示格子 $(row, col)$ 的高度。一开始你在最左上角的格子 $(0, 0)$ ，且你希望去最右下角的格子 $(rows-1, columns-1)$ （下标从 0 开始）。每次可以往 上，下，左，右 四个方向之一移动，你想要找到耗费 体力 最小的一条路径。一条路径耗费的 体力值 是路径上相邻格子之间 高度差绝对值 的 最大值 决定的。分析法一：Dijkstra求单源最短路径。从起点出发，四个方向，松弛其邻接的..." }, { "title": "Leetcode 周赛#213 题解", "url": "/posts/LeetCode%E5%91%A8%E8%B5%9B213/", "categories": "Online Judge, LeetCode", "tags": "算法-组合公式, 算法-深搜, 算法-递归与分治, 算法-贪心", "date": "2020-11-02 00:26:00 +0800", "snippet": "5554. 能否连接形成数组题目链接题意给定整数数组 arr ，其中每个整数互不相同 。另有一个由整数数组构成的数组 pieces，其中的整数也互不相同 。请以 任意顺序 连接 pieces 中的数组以形成 arr 。但是，不允许 对每个数组内部 pieces[i] 中的整数重新排序。若可连接 pieces 中的数组形成 arr ，返回 true ；否则，返回 false 。样例分析如果遍历arr每个元素找到其对应的pieces[i]子数组，考虑的细节有很多。不妨遍历每个pieces[i]数组，以其子数组的首元素作为切入口，找到arr数组对应位置，再将pieces[i]这个子数组遍历完，..." }, { "title": "「JavaSE学习笔记04」异常", "url": "/posts/%E5%BC%82%E5%B8%B8/", "categories": "Java, JavaSE", "tags": "JavaSE", "date": "2020-10-31 22:39:00 +0800", "snippet": "Chapter 9 异常异常：指程序在执行过程中，出现的非正常的情况，最终导致JVM非正常停止。在Java等面向对象的编程语言中，异常是一个类，所有异常都是发生在运行阶段的（因为也只有程序运行阶段方可new 对象），产生异常其实就是创建异常对象。而Java处理异常的方式为中断处理。9.1 异常体系如下的UML图关于异常的继承结构，异常的根类为java.lang.Throwable（顾名思义，所有异常均可抛出），其下有两个子类：java.lang.Error 与 java.lang.Exception。而我们平常所说的异常指的是后者。 错误（Error）：Java程序运行过程中若发生错误..." }, { "title": "Codeforces Round#677 (Div. 3) E、G题解", "url": "/posts/CF677(Div3)/", "categories": "Online Judge, Codeforces", "tags": "算法-最短路径, 算法-数学, 算法-圆排列, 算法-暴力", "date": "2020-10-29 16:57:00 +0800", "snippet": "E. Two Round Dances #圆排列题目链接题意$n$（保证偶数）个人，要表演一个节目，这个节目包含两种圆形舞蹈，而每种圆形舞蹈恰好需要$\\frac{n}{2}$个人，每个人只能跳一种圆形舞。一个节目中两支舞蹈中的人编号组成一条圆环。故两个节目，对应两个圆环排列。两个不相同的节目，等价于，两个圆排列是不同的，现要你求出他们能做出多少种不同的节目。分析 圆排列：从$n$个不同元素选取$r$个元素，不分首尾地围成一个圆圈的排列。 其排列方案数为：$\\frac{A^r_n}{r}$。特别地，当$n=r$时，$\\frac{A^n_n}{n}$可以进一步得到$(n-1)!$从$n$..." }, { "title": "「JavaSE学习笔记03」继承、接口、多态、内部类", "url": "/posts/%E7%BB%A7%E6%89%BF-%E6%8E%A5%E5%8F%A3-%E5%A4%9A%E6%80%81-%E5%86%85%E9%83%A8%E7%B1%BB/", "categories": "Java, JavaSE", "tags": "JavaSE", "date": "2020-10-25 22:00:00 +0800", "snippet": "Chapter5. 继承继承作为面向对象的三大特征之一，它是多态的前提。它主要解决的问题是共性抽取。Java中的继承，是单继承、多级继承的。已存在的类，被称为超类、基类、父类(parent class)；新类，被称为子类(subclass)、派生类。每一个子类的直接父亲是唯一的，但一个父亲可拥有多个子类。子类比父类拥有的功能更加丰富。5.1 继承的格式定义父类的格式（普通类的定义）public class 父类名称{ //...}定义子类的格式public class 子类名称 extends 父类名称{ //...}5.2 继承中成员的访问特点优先使用本类的成员变量与成员方..." }, { "title": "「JavaSE学习笔记02」对象与类", "url": "/posts/%E5%AF%B9%E8%B1%A1%E4%B8%8E%E7%B1%BB/", "categories": "Java, JavaSE", "tags": "JavaSE", "date": "2020-10-23 22:27:00 +0800", "snippet": "Chapter 4. 对象与类4.1 面向对象程序设计概述面向对象程序设计（简称OOP），是当今主流程序设计范型。面向对象的程序是由对象组成的，每个对象（来自于标准库或自定义的）包含对用户公开的特定功能和隐藏的实现部分。在OOP中，不必关心对象的具体实现，只要能够满足用户的需求即可。面向对象的语言中，包含了三大基本特征：封装、继承、多态。4.1.1 类类(class)，是构造对象的模板或蓝图。由类构造(construct)对象的过程，成为类的实例(instance)。封装(encapsulation)，给予对象“黑盒”特征，将数据与行为组合在一个包中，并对对象的使用者隐藏了数据的实现方式..." }, { "title": "「JavaSE学习笔记01」开发前言与环境搭建、基础语法", "url": "/posts/%E5%BC%80%E5%8F%91%E5%89%8D%E8%A8%80%E4%B8%8E%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/", "categories": "Java, JavaSE", "tags": "JavaSE", "date": "2020-10-18 22:20:00 +0800", "snippet": "本蒟蒻学习过C/C++的语法，故在学习Java的过程中，会关注于C++与Java的区别。开发前言部分，看了苏星河教程中的操作步骤。而后，主要阅读了《Java核心技术 卷1 基础知识》(第8版)，本篇笔记的诞生与这本书有很大的关系。:smile_cat: “程序设计语言的成功，更多地取决于其支撑系统的能力，而不是优美的语法。”Chapter 1. 开发前言1.0 错误总结 _int 与 $fred 是合法的变量名 Integer 不是关键字 classpath 环境变量是指定 Java 类文件所在的文件路径，在运行 Java 程序时需要访问该环境变..." }, { "title": "2016年第七届蓝桥杯【C++省赛B组】D、E、G、H、I题解", "url": "/posts/2016%E5%B9%B4%E7%AC%AC%E4%B8%83%E5%B1%8A%E8%93%9D%E6%A1%A5%E6%9D%AF/", "categories": "Online Judge, 蓝桥杯", "tags": "Cpp, 算法-深搜, 算法-枚举, 算法-连通性, 算法-暴力, 算法-哈希表, 算法-贪心", "date": "2020-10-16 11:37:00 +0800", "snippet": "F. 方格填数 #深搜题意有$10$个格子，填入0~9的数字。要求：连续的两个数字不能相邻。（左右、上下、对角都算相邻），求可能的填数方案数。 +--+--+--+ | | | |+--+--+--+--+| | | | |+--+--+--+--+| | | | +--+--+--+分析题目有点表述不清，实际上要我们在所有格子中只填一种数字。题目中的“相邻”，是指元素在位置上的相邻。而“连续”，是指数字意义上的连续，比如4 5 7，中间的5，它与右边的7不是连续的，但它与左边的4连续，即$5 - 4 = 1$。因此，在判断是否连续的时候，需要判断特定点的左..." }, { "title": "2018年第九届蓝桥杯【C++省赛B组】B、C、D、F、G 题解", "url": "/posts/2018%E5%B9%B4%E7%AC%AC%E4%B9%9D%E5%B1%8A%E8%93%9D%E6%A1%A5%E6%9D%AF/", "categories": "Online Judge, 蓝桥杯", "tags": "Cpp, 算法-深搜, 算法-枚举, 算法-完全背包, 算法-暴力, 算法-不定方程", "date": "2020-10-14 13:14:00 +0800", "snippet": "B. 明码 #STL题意把每个字节转为2进制表示，1表示墨迹，0表示底色。每行2个字节，一共16行，布局是：第1字节，第2字节第3字节，第4字节....第31字节, 第32字节给定一段由多个汉字组成的信息，每个汉字用$32$个字节表示，这里给出了字节作为有符号整数的值。题目的要求隐藏在这些信息中。你的任务是复原这些汉字的字形，从中看出题目要求，并根据要求填写答案。分析注意题目中说明是有符号二进制，也就说如果某个十进制数为负数，则它的二进制为补码（对于负数的补码，最高位为符号位，要取1，对原码取反再加一）。题目简而言之，即为每一行有$32$个数字，每两个数字组成一行的布局。比如第一行：4 ..." }, { "title": "2017年第八届蓝桥杯【C++省赛B组】D、E、G、H、I题解", "url": "/posts/2017%E5%B9%B4%E7%AC%AC%E5%85%AB%E5%B1%8A%E8%93%9D%E6%A1%A5%E6%9D%AF/", "categories": "Online Judge, 蓝桥杯", "tags": "Cpp, 算法-深搜, 算法-枚举, 算法-完全背包, 算法-暴力, 算法-不定方程", "date": "2020-10-14 00:33:00 +0800", "snippet": "可能因为我使用暴力思维比较少，这场感觉难度不低。B. 等差素数列 #暴力 #枚举题意类似：$7,37,67,97,127,157$ 这样完全由素数组成的等差数列，叫等差素数数列。上边的数列公差为$30$，长度为$6$。现要你求长度为$10$的等差素数列，其公差最小值是多少？分析先将一定区间的整数筛出合数和质数来（这里用了欧拉筛法），接下来for循环中外层枚举这个公差，内层枚举等差素数数列的首项，只要长度满足10，即可退出。#include &amp;lt;algorithm&amp;gt;#include &amp;lt;cstdio&amp;gt;#include &amp;lt;cs..." }, { "title": "2019年第十届蓝桥杯【C++省赛B组】D、E、G、H、I题解", "url": "/posts/2019%E5%B9%B4%E7%AC%AC%E5%8D%81%E5%B1%8A%E8%93%9D%E6%A1%A5%E6%9D%AF/", "categories": "Online Judge, 蓝桥杯", "tags": "Cpp, 算法-广搜, 算法-枚举, 算法-树的层次遍历, 算法-数学, 思维-性质观察", "date": "2020-10-09 00:56:00 +0800", "snippet": "这场有几道题目思路，在之前比赛中遇到过D. 数的分解 #枚举题意将$2019$分解成$3$个各不相同的正整数之和，并且每个正整数都不包含数字$2$和$4$，一共有多少种分解方法？注意，$1000+1001+18$和$1001+1000+18$被视为同一种分析由于三个正整数均不相同，也就说这三个正整数存在偏序关系，不妨设i&amp;lt;j&amp;lt;k，枚举i,j两个变量，推出k，判断i,j,k是否满足题目要求。#include &amp;lt;string&amp;gt;#include &amp;lt;cstring&amp;gt;#include &amp;lt;cstdio&..." }, { "title": "Leetcode 周赛#209 题解", "url": "/posts/LeetCode%E5%91%A8%E8%B5%9B209/", "categories": "Online Judge, LeetCode", "tags": "算法-广搜, 算法-树的遍历, 算法-极角, 算法-排序思想, 算法-双指针, 算法-记忆化搜索, 格雷码", "date": "2020-10-08 10:48:00 +0800", "snippet": "1609. 奇偶树 #广搜 #二叉树的层次遍历题目链接题意如果一棵二叉树满足下述几个条件，则可以称为奇偶树 ： 二叉树根节点所在层下标为 0 ，根的子节点所在层下标为 1 ，根的孙节点所在层下标为 2 ，依此类推。 偶数下标 层上的所有节点的值都是 奇 整数，从左到右按顺序 严格递增 奇数下标 层上的所有节点的值都是 偶 整数，从左到右按顺序 严格递减给定根节点，要求判断该二叉树是否为奇偶树分析BFS对于已知根节点，按深度遍历时，十分高效。这里要注意下入队列顺序是从左至右。/** * Definition for a binary tree node. * struct..." }, { "title": "CodeBlocks相关配置", "url": "/posts/CodeBlocks%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE/", "categories": "其他知识技术分享, 软件与环境配置", "tags": "Cpp, 配置", "date": "2020-10-06 16:33:00 +0800", "snippet": "打开调试模式 首先一定是创建项目。 项目创建完成后，配置调试器$GDB$路径 打开调试窗口。 C++11标准字体调节" }, { "title": "Leetcode 双周赛#36 题解", "url": "/posts/LeetCode%E5%8F%8C%E5%91%A8%E8%B5%9B36/", "categories": "Online Judge, LeetCode", "tags": "算法-贪心, 算法-稀疏矩阵, STL, 算法-模拟, 思维-任务调度, 算法-哈希表", "date": "2020-10-06 14:23:00 +0800", "snippet": "1604. 警告一小时内使用相同员工卡大于等于三次的人 #哈希表题目链接题意给定两个字符串数组keyName和keyTime，分别表示名字为keytime[i]的人，在某一天内使用员工卡的时间（格式为24小时制，&quot;HH:MM&quot;）。你要找出一小时内使用员工卡大于等于3的人，名字按字典序升序排列。注意，&quot;23:51&quot;-&quot;00:10&quot;不被视为一小时内，因为系统记录的是某一天内的使用情况分析给每个人创建一个数组，记录所有的打卡时间，然后将每个人名字字符串映射到相应的打卡时间数组。有个坑点是，题目给定的打卡时间不一定是顺序的，需要排序。另..." }, { "title": "牛客小白月赛#26 题解", "url": "/posts/%E7%89%9B%E5%AE%A2%E5%B0%8F%E7%99%BD%E6%9C%88%E8%B5%9B26/", "categories": "Online Judge, 牛客算法竞赛", "tags": "Cpp, 算法-树状数组, 算法-离线处理, 算法-二分图, 算法-广搜, 算法-深搜, 算法-模拟, 思维-区间重复覆盖, STL, 算法-离散化, 算法-贪心, 算法-二分思想", "date": "2020-10-06 11:40:00 +0800", "snippet": "A-牛牛爱学习 #二分答案 #贪心题目链接题意给定$n (\\leq1e6) $本书，每本书知识值为a[i]。如果同一天连续读k本书，获得知识力为a[i]-k+1。看书不需按顺序，且一本书只能看一次(即某一天看过这本书后，以后都不能再看了)，一天之内不一定要将所有书全都看了。现要求最少多少天才能获得大于等于m点知识点，若无法获得则输出-1。分析假设最坏情况下，一天只看一本书，即需要n天看完，由此获得的知识力一定是最大的，但我们试探发现，如果在某一天看两本书，由此再累计一下知识力，有可能仍能够大于m，而此时天数为n-1。因而观察到答案的单调性，试着二分可能的天数。如何确实试探的天数x能否满足..." }, { "title": "牛客小白月赛#25 题解", "url": "/posts/%E7%89%9B%E5%AE%A2%E5%B0%8F%E7%99%BD%E6%9C%88%E8%B5%9B25/", "categories": "Online Judge, 牛客算法竞赛", "tags": "Cpp, 算法-组合公式, 算法-逆元, 算法-位运算, 算法-二分思想", "date": "2020-10-06 11:40:00 +0800", "snippet": "这一场的小白月赛对萌新真的友好，连我这个蒟蒻都能切$6$题。（赛后发现有并查集的题又能切一题）。主要是本场要涉及的算法也不算很多，卡我的似乎都是数论的题:pensive:。因为本场有几道分数结果要取$1e9+7$模，如果不太懂，可以戳这的A题。（快速幂+费马大定理求逆元）J. 异或和之和 #组合公式 #逆元 #位运算题目链接题意给定含有$n$个正整数的数组，现要你从该数中任取$3$个元素进行异或运算后再总的求和的值。即，从数组中取一共$C^3_n$个三元组${ a,b,c }$，先计算这些三元组内部异或($a\\oplus b\\oplus c$)，再对所有异或结果进行求和，注意要对$1e9..." }, { "title": "Grakn Forces 2020 ABCDE题解", "url": "/posts/Grakn-Forces-2020-ABCDE%E9%A2%98%E8%A7%A3/", "categories": "Online Judge, Codeforces", "tags": "算法-构造, 算法-二分思想, 算法-动态规划, 算法-并查集, 算法-贪心", "date": "2020-10-01 00:00:00 +0800", "snippet": "看到老外评论区中说，这场的难度估计是$div.1$和$div.1.5$的合并:pensive:A. Circle Coloring #构造题目链接题意给定三个长度为$n$数组$a,b,c$，要你从三个数组中选取元素构造出长度也为$n$的数组，内部相邻元素互不相等（包括下标$1$和$n$）分析注意是一个圈中相邻元素互不相等。#include &amp;lt;algorithm&amp;gt;#include &amp;lt;cstdio&amp;gt;#include &amp;lt;cstring&amp;gt;#include &amp;lt;iostream&amp;gt;#incl..." }, { "title": "Leetcode 周赛#208 题解", "url": "/posts/LeetCode%E5%91%A8%E8%B5%9B208/", "categories": "Online Judge, LeetCode", "tags": "Cpp, 算法-模拟, 算法-树的遍历, 算法-枚举子集, 算法-回溯与剪枝", "date": "2020-09-30 00:31:00 +0800", "snippet": "本周周赛的题面风格与以往不太一样，但不要被吓着，读懂题意跟着模拟，其实会发现并不会难到哪里去。1599. 经营摩天轮的最大利润 #模拟题目链接题意摩天轮$4$个座舱，每个座舱最多可容纳$4$位游客，座舱会轮转，且每次轮转需支付一定运行成本$runningCost$，且恰好转动$1/4$周。给定长度为$n$的数组$customers$， $customers[i]$ 是在第 $i$ 次轮转之前到达的新游客的数量，即你必须在新游客到来前轮转$i$ 次。每位游客在登上离地面最近的座舱前都会支付登舱成本 $boardingCost$ ，一旦该座舱再次抵达地面，他们就会离开座舱结束游玩。注意，如果..." }, { "title": "Codeforces Round#674 (Div. 3) C、D题解", "url": "/posts/CF674(Div3)/", "categories": "Online Judge, Codeforces", "tags": "算法-枚举, 算法-前缀和, 算法-哈希表", "date": "2020-09-28 21:05:00 +0800", "snippet": "C.Increase and Copy #枚举题目链接题意最初你有仅包含一个数字$1$的数组$a$，一次操作中可对该数组进行两类操作： 从数组中选择一个元素，将该元素$+1$； 从数组中选择一个元素，复制该元素放到原数组末端。你需要在尽可能少的操作次数下，使得该数组所有元素值之和不小于$n$($n\\leq 1e9$)，现要你求出最少操作次数分析显然，操作过程中，一定是先对最初元素不断自增，直到某个值后，再复制这个元素，即先进行第一类操作再进行第二类，这样能够保证操作次数尽可能少。那么我们应该将最初元素加到多少才复制呢？我们可以枚举该元素可以增加至$i$，那么消耗次数为$i-1$，那么..." }, { "title": "2020年下半年之练习记录/题解目录", "url": "/posts/2020%E5%B9%B4%E9%A2%98%E8%A7%A3%E7%9B%AE%E5%BD%95/", "categories": "Blogging, Record", "tags": "", "date": "2020-09-28 00:15:00 +0800", "snippet": "受到tomjobs大佬的博客启发，考虑到未来的我可能会回顾以往的题目，决定在这里记录下自己的练习记录与题解目录，方便自己查找吧:sweat_smile:LeetCodeLeetCode周赛#200 题解 标签 1535 找出数组游戏的赢家 模拟 :star:1536 排布二进制网格的最少交换次数 贪心 :star:1537 最大得分 分段统计极值、双指针 LeetCode周赛#201 题解 标签 ..." }, { "title": "牛客小白月赛#28 题解", "url": "/posts/%E7%89%9B%E5%AE%A2%E5%B0%8F%E7%99%BD%E6%9C%88%E8%B5%9B28/", "categories": "Online Judge, 牛客算法竞赛", "tags": "Cpp, 算法-逆元, 算法-快速幂, 算法-博弈论, 思维-性质观察, 算法-递归与分治, 算法-位运算, 算法-三分思想, STL-bitset, 算法-KMP, 算法-DP, 算法-单源最短路径, 算法-并查集", "date": "2020-09-27 00:31:00 +0800", "snippet": "A.牛牛和牛可乐的赌约 #逆元 #快速幂题目链接题意$n$面骰子（点数分别从$1$到$n$，掷出每面的概率为$\\frac{1}{n}$），先让你投$m$次骰子，如果全部投出点数为$n$点面。你在计算输的概率，请输出分数$p/q\\ mod\\ 1e9+7$。分析显然，P(输)$=1- (\\frac{1}{n})^m=\\frac{(n-1)^m}{n^m}$，但注意题目要求你求出P(输)在$mod\\ 1e9+7$意义下的值，故先对分子进行快速幂，再对分母$n^m$求出其逆元$inv(n^m)$。考虑到模数为质数，直接使用费马小定理+快速幂即可得到逆元。 费马小定理：若$p$为素数，$a$为正..." }, { "title": "牛客练习赛#70 题解", "url": "/posts/%E7%89%9B%E5%AE%A2%E7%BB%83%E4%B9%A0%E8%B5%9B70/", "categories": "Online Judge, 牛客算法竞赛", "tags": "Cpp, 算法-尺取法, 算法-线性DP, STL, 算法-树的性质, 算法-质因数分解, 算法-模拟, 思维-性质观察", "date": "2020-09-26 11:40:00 +0800", "snippet": "A.重新排列 #尺取法题目链接题意给定字符串，你需要将该字符串中的某个子串重新排列，使得该子串变为&quot;puleyaknoi&quot;。现要你求出最短的这类子串的长度。分析因为子串要求连续性，“连续性”和“多个满足条件中选择最优的”，可以联想到尺取法。怎么判断是否满足条件？由于子串能够重新排列，我们只需要统计相应区间中模式串对应字符的数量即可。#include &amp;lt;string&amp;gt;#include &amp;lt;cstring&amp;gt;#include &amp;lt;cstdio&amp;gt;#include &amp;lt;iostream&..." }, { "title": "Leetcode 双周赛#35 题解", "url": "/posts/LeetCode%E5%8F%8C%E5%91%A8%E8%B5%9B35/", "categories": "Online Judge, LeetCode", "tags": "算法-差分, 算法-贪心, 算法-前缀和, 算法-拓扑排序, 算法-哈希表", "date": "2020-09-22 17:57:00 +0800", "snippet": "1589. 所有排列中的最大和 #差分 #贪心题目链接题意给定整数数组nums，以及查询数组requests，其中requests[i] = [starti, endi] 。第 i 个查询求 nums[starti] + nums[starti + 1] + ... + nums[endi - 1] + nums[endi] 的结果 。你可以任意排列 nums 中的数字，请你返回所有查询结果之和的最大值,请将答案对 109 + 7 取余 后返回。分析我们先离线获得需要查询的区间，并统计该查询涉及端点的出现次数（也就是频数）。显然由贪心思想，我们要想答案尽可能地大，就应该将值更大的元素安排..." }, { "title": "Leetcode 周赛#207 题解", "url": "/posts/LeetCode%E5%91%A8%E8%B5%9B207/", "categories": "Online Judge, LeetCode", "tags": "算法-枚举子集, 算法-滚动数组, 算法-状压DP, 算法-模拟, 算法-字符串处理, 算法-深搜, 算法-哈希表, 算法-动态规划", "date": "2020-09-21 16:52:00 +0800", "snippet": "5519. 重新排列单词间的空格 #字符串 #模拟题目链接题意给定字符串text，该字符串由若干被空格包围的单词组成，也就说两个单词之间至少存在一个空格。现要你重新排列空格，使每对相邻单词间空格数目都相等，并尽可能最大化该数目。若不能重新平均分配所有空格，请将多余的空格放置在字符串末尾，这也意味着返回的字符串应当与原text字符串的长度相等。class Solution {public: string reorderSpaces(string text) { int spacenum = 0, words = 0; vector&amp;lt;int&a..." }, { "title": "LCCUP 2020 秋季编程大赛 补题", "url": "/posts/LCCUP2020/", "categories": "Online Judge, LeetCode", "tags": "算法-二分思想, 算法-线性DP, 算法-记忆化搜索, 算法-数学, 思维-逆向, 算法-深搜, 算法-广搜", "date": "2020-09-21 16:52:00 +0800", "snippet": "果然是力扣杯，难度较于平时周赛提高了不少，个人感觉最后两题并不太容易QAQLCP 18.早餐组合 #二分思想题目链接题意你获得了每种主食的价格，及每种饮料的价格，你需要选择一份主食和一份饮料，且花费不超过$x$元。现要求购买方案数。分析先分别对主食与饮料进行排序。枚举主食的价格，得出饮料最高价格，再二分寻找这一价格对应的饮料编号，小于该编号的饮料均能够与当前主食进行搭配。同理，枚举饮料价格，再二分对应主食价格。时间复杂度为$O(nlogn)$。速度并不快，可以用空间换取时间，用哈希表去维护。typedef long long ll;const int MOD = 1e9 + 7;clas..." }, { "title": "Leetcode 周赛#206 题解", "url": "/posts/LeetCode%E5%91%A8%E8%B5%9B206/", "categories": "Online Judge, LeetCode", "tags": "算法-模拟, 算法-暴力, 算法-排序思想", "date": "2020-09-20 21:13:00 +0800", "snippet": "1583. 统计不开心的朋友 #模拟 #暴力题目链接题意有n为朋友，对每位朋友i，preference[i]包含 按亲密度从大到小 的朋友编号。朋友们会被分为若干对，配对情况由pairs数组给出，即pair[i]={xi, yi}表示xi与yi相互配对。当x与y相互配对且u与v相互配对的情况下，如果同时满足下面两个条件，x就会不高兴： x-&amp;gt;u亲密度 大于 x-&amp;gt;y； u-&amp;gt;x亲密度 大于 u-&amp;gt;v；分析初看题目，我以为一旦满足上述两条件，不但x不高兴，u也会不高兴。然而，这是错的。对于数据6, preferences=[[1,..." }, { "title": "CET-6 词组、佳句积累", "url": "/posts/CET-6/", "categories": "人文社科, English", "tags": "English", "date": "2020-09-17 00:20:00 +0800", "snippet": "一、片段积累(2020/09/17) 近三年 CET6 - 翻译 Phrases or Expressions Notes drive to commute to and from work 开车上下班 parking lots deficiency 停车位不足 increasingly serious 日益严重 indispensable / integral 不可或缺的 hig..." }, { "title": "CCF-CSP认证 C++题解目录", "url": "/posts/CCF-CSP/", "categories": "Online Judge, CCF-CSP", "tags": "Cpp, 算法", "date": "2020-09-07 12:50:00 +0800", "snippet": "持续更新中，记录刷题过程并分享一下小小的心得总结。 试题编号 试题名称 标签 202006-1 线性分类器 | 题解 线性规划 202006-2 稀疏向量 | 题解 归并排序思想 202006-3 化学方程式 | 题解 ⭐ 大模拟、常用STL 201912-1 报数| 题解   201912-2 回收站选址| 题解 ..." }, { "title": "Leetcode 周赛#205 题解", "url": "/posts/LeetCode%E5%91%A8%E8%B5%9B205%E9%A2%98%E8%A7%A3/", "categories": "Online Judge, LeetCode", "tags": "算法-模拟, 算法-哈希表, 算法-贪心, 算法-并查集, 算法-最小生成树", "date": "2020-09-07 08:55:00 +0800", "snippet": "5508. 数的平方等于两数乘积的方法数 #模拟 #哈希表题目链接题意给你两个整数数组nums1 和 nums2 ，请你返回根据以下规则形成的三元组的数目（类型 1 和类型 2 ）： 类型 1：三元组 (i, j, k) ，如果 nums1[i]2 == nums2[j] * nums2[k] 其中 0 &amp;lt;= i &amp;lt; nums1.length 且 0 &amp;lt;= j &amp;lt; k &amp;lt; nums2.length 类型 2：三元组 (i, j, k) ，如果 nums2[i]2 == nums1[j] * nums1[k] 其中 ..." }, { "title": "Leetcode 双周赛#34 题解", "url": "/posts/LeetCode%E5%8F%8C%E5%91%A8%E8%B5%9B34/", "categories": "Online Judge, LeetCode", "tags": "算法-归并排序, 算法-记忆化搜索, 算法-组合公式, 算法-区间分割", "date": "2020-09-06 23:38:00 +0800", "snippet": "5492. 分割字符串的方案数 #组合公式 #乘法原理 #区间分割题目链接题意给定01二进制串$s$，可将$s$分割为三个非空 字符串$s_1,s_2,s_3$，即($s_1+s_2+s_3=s$)。现要你求出分割$s$的方案数，保证$s_1,s_2,s_3$中字符1的数目相同（对$1e9+7$取模），他们的长度不一定相等分析 举个例子，$01100011000101$串，可以知道三个子串必须包含2个&#39;1&#39;，我们观察到左子串的界限，可以如下划分：$011 00011000101$、$0110 0011000101$、$01100..." }, { "title": "Codeforces Round#667 (Div. 3) B、C、D、E题解", "url": "/posts/CF667(Div3)/", "categories": "Online Judge, Codeforces", "tags": "算法-枚举, 算法-数学, 算法-贪心, 算法-暴力, 算法-模拟, 算法-二分思想", "date": "2020-09-05 15:48:00 +0800", "snippet": "Codeforces Round #667 (Div. 3) B、C、D、E 题解B. Minimum Product #枚举 #贪心题目链接题意给定四个整数$a, b, x, y$，其中$a\\geq x, b\\geq y$，你可以执行不超过$n$次的操作：选择$a$或者$b$，减一。操作保证$a$不会低于$x$，$b$不会低于$y$。现要你求出$a$与$b$的最小乘积。分析容易知道结论，要使乘积变小，一定是要将尽可能多的减少量放到某一个数，而不是将减少量均摊给两个数。[*不完全证明见后]由此，最终结果无非是两种情况，1) 要么先对$a$做减法，只有当新$a$不能再做减法时，再对$b$做..." }, { "title": "Codeforces Round#656 (Div. 3) 题解", "url": "/posts/CF656(Div3)/", "categories": "Online Judge, Codeforces", "tags": "算法-构造, 算法-深搜, 算法-贪心, 算法-拓扑排序, 算法-递归与分治", "date": "2020-09-04 21:51:00 +0800", "snippet": "Codeforces Round #656 (Div. 3)A. Three Pairwise Maximums #构造题目链接题意给定三个正整数$x,y,z$，要求找出正整数$a,b,c$，满足$x=max(a,b), y=max(a,c),z=max(b,c)$分析我们可以先将$x,y,z$降序排序得到$z\\leq y\\leq x$。由于$x$是$a,b,c$三者最值，且通过三个关系中$x$所代表的数字一定出现两次，可以推断出，$y=x$，如果最值没有出现两次，说明我们不可能构造出$a,b,c$。既然题目让我们构造，构造且要满足$max(a,b)=max(a,c)$，那么不妨设$a$..." }, { "title": "Leetcode 周赛#204 题解", "url": "/posts/LeetCode%E5%91%A8%E8%B5%9B204-%E9%A2%98%E8%A7%A3/", "categories": "Online Judge, LeetCode", "tags": "算法-模拟, 算法-Tarjan求割点, 算法-递归与分治, 算法-组合公式, 算法-贪心", "date": "2020-09-03 18:02:00 +0800", "snippet": "1566. 重复至少 K 次且长度为 M 的模式 #模拟题目链接题意给定正整数数组 arr，请你找出一个长度为 m 且在数组中至少重复 k 次的模式。模式 是由一个或多个值组成的子数组（连续的子序列），连续 重复多次但 不重叠 。 模式由其长度和重复次数定义。如果数组中存在至少重复 k 次且长度为 m 的模式，则返回 true ，否则返回 false 。分析题目初看有点麻烦，但实际上隔着特定周期(即重复长度)去检查相应字符是否相等，模拟一下题意即可。class Solution {public: bool containsPattern(vector&amp;lt;int&amp;..." }, { "title": "导航目录", "url": "/posts/%E5%AF%BC%E8%88%AA%E7%9B%AE%E5%BD%95/", "categories": "Blogging, Record", "tags": "", "date": "2020-09-03 00:00:00 +0800", "snippet": "由于经常要用到不同的电脑，在此整理下qwq竞赛网站 LeetCode 牛客竞赛 CodeForces 洛谷工具\\查询 网站 计算机专业术语对照 desmos函数图像 Office Tool plus Emoji:smile: LaTeX符号、命令公式文章阅读 CS-Notes 中文文案排版指北 矩阵乘法软件下载 Visual Studio IDE CodeBlocks Typora 相关主题见OneDrive PicGo 下载链接见OneDrive 相关教程有： PicGo..." }, { "title": "Leetcode 周赛#203 题解", "url": "/posts/LeetCode%E5%91%A8%E8%B5%9B203%E9%A2%98%E8%A7%A3/", "categories": "Online Judge, LeetCode", "tags": "算法-贪心, 思维-思维, 算法-记忆化搜索, 算法-二分思想, STL", "date": "2020-08-25 14:30:00 +0800", "snippet": "1561. 你可以获得的最大硬币数目 #贪心题目链接题意有 3n 堆数目不一的硬币，你和你的朋友们打算按以下方式分硬币： 每一轮中，你将会选出 任意 3 堆硬币（不一定连续）。 Alice 将会取走硬币数量最多的那一堆。 你将会取走硬币数量第二多的那一堆。 Bob 将会取走最后一堆。重复这个过程，直到没有更多硬币。给你一个整数数组piles ，piles[i] 是第 i 堆中硬币的数目。现要你求出可获得的最大硬币数目。分析毫无疑问，需要先将硬币堆降序排序。既然每一轮我只能拿当前三堆中的第二大，为了让我的硬币数更多，应先让Bob从后面堆中取极小硬币堆，我与Alice在前面取极大硬币..." }, { "title": "牛客小白月赛#27 题解", "url": "/posts/%E7%89%9B%E5%AE%A2%E5%B0%8F%E7%99%BD%E6%9C%88%E8%B5%9B27/", "categories": "Online Judge, 牛客算法竞赛", "tags": "Cpp, 算法-树的直径, 算法-线性DP, 算法-状压DP, 算法-基本不等式, 算法-拓扑排序, 算法-二维前缀和, 算法-双指针, STL-bitset, 算法-单调队列, 算法-二分思想", "date": "2020-08-25 09:22:00 +0800", "snippet": "思路主要参考自官方题解，以及网友的博客分享，十分感谢~A-巨木之森 #树的直径题目链接分析树的直径，可以参考这篇教程#include &amp;lt;cstdio&amp;gt;#include &amp;lt;cmath&amp;gt;#include &amp;lt;map&amp;gt;#include &amp;lt;iostream&amp;gt;#include &amp;lt;algorithm&amp;gt;#include &amp;lt;queue&amp;gt;#include &amp;lt;cstring&amp;gt;using namespace std;t..." }, { "title": "Leetcode 双周赛#33 题解", "url": "/posts/LeetCode%E5%8F%8C%E5%91%A8%E8%B5%9B33/", "categories": "Online Judge, LeetCode", "tags": "算法-贪心, 思维-逆向, 算法-深搜", "date": "2020-08-23 16:06:00 +0800", "snippet": "5480. 可以到达所有点的最少点数目题目链接题意给定有向无环图，编号从0到n-1，一个边集数组edges（表示从某个顶点到另一顶点的有向边），现要找到最小的顶点集合，使得从这些点出发，能够到达图中所有顶点。样例输出为[0, 2, 3]。从这三个顶点出发即能访问所有顶点。分析实际上，只需要将所有入度为0的顶点加入解集即可。因为：1.入度为0的顶点若不加入解集，则除了它以外，没有其他顶点能够沿途访问到它。2.入度不为0的顶点一定能被某个顶点沿途访问到，为了保证解集尽可能小，那应尽可能从这些入度非0的顶点溯源。class Solution {private: int InD[10000..." }, { "title": "Leetcode 周赛#202 题解", "url": "/posts/Leetcode-%E5%91%A8%E8%B5%9B202-%E9%A2%98%E8%A7%A3/", "categories": "Online Judge, LeetCode", "tags": "算法-二分思想, 算法-前缀和, 算法-记忆化搜索", "date": "2020-08-18 16:35:00 +0800", "snippet": "本周的周赛题目质量不是很高，因此只给出最后两题题解（懒）。1552 两球之间的磁力 #二分答案题目链接题意有n个空篮子，第i个篮子位置为position[i]，现希望将m个球放到这些空篮子，使得任意两球间最小磁力最大。（其中，磁力简化为两点位置之差）分析该题是二分答案的裸题，详细见代码class Solution {public: bool Judge(vector&amp;lt;int&amp;gt;&amp;amp; a, int x, int m){ int cnt = 1，lastpos = a[0]; for (int i = 1; i &am..." }, { "title": "Leetcode 双周赛#32 题解", "url": "/posts/LeetCode%E5%8F%8C%E5%91%A8%E8%B5%9B32/", "categories": "Online Judge, LeetCode", "tags": "算法-前缀和, 算法-哈希表, 算法-状态压缩", "date": "2020-08-10 17:45:00 +0800", "snippet": "1540 K次操作转变字符串 #计数题目链接题意给定两字符串$s$和$t$，要求你在$k$次操作以内将字符串$s$转变为$t$，其中第$i$次操作时，可选择如下操作： 选择字符串$s$中满足 $1 \\leq j \\leq s.length$ 且之前未被选过的任意下标 $j$（下标从1开始），并将此位置的字符恰好切换 $i$ 次。切换 1 次字符即用字母表中该字母的下一个字母替换它（字母表环状接起来，所以$’z’切换后会变成 $’a’$）。 请记住任意一个下标 j 最多只能被操作 1 次！！ 不进行任何操作。 如果在不超过 k 次操作内可以把字符串 $s$转..." }, { "title": "Leetcode 周赛#201 题解", "url": "/posts/LeetCode%E5%91%A8%E8%B5%9B201/", "categories": "Online Judge, LeetCode", "tags": "算法-递归与分治, 算法-前缀和, 算法-哈希表, 算法-线性DP, 算法-区间DP", "date": "2020-08-10 17:42:00 +0800", "snippet": "1545 找出第N个二进制字符串的第K位 #分治题目链接题意给定正整数$n(\\leq 20)$与$k$，二进制串$S_n$形成规则有： $S_1 = “0”$ 当$i&amp;gt;1$时，$S_i = S_{i-1}+“1”+reverse(invert(S_{i-1}))$ 其中$reverse(x)$表示左右反转字符串x，$invert(x)$表示翻转x中的每一位(0-&amp;gt;1，1-&amp;gt;0) 现要返回$S_n$的第$k$位字符。如：$n=3,k=1$，可以得到$S_3=“0111001”$，其第一位为”0”，故返回”0”分析本来..." }, { "title": "MarkDown使用之LaTeX表示数学公式", "url": "/posts/MarkDown%E4%BD%BF%E7%94%A8%E4%B9%8BLaTeX%E8%A1%A8%E7%A4%BA%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/", "categories": "其他知识技术分享, LaTeX", "tags": "LaTeX", "date": "2020-08-07 00:00:00 +0800", "snippet": "对于文本排版格式，对于$Microsoft\\,Word$来说，功能尽全，可调的参数十分多，人们可能会将不少的时间放在具体的文字大小、实现样式。而$markdown$语法能够让人们通过符号去替代样式，尽管实现的样式没有像$word$那样多，但在日常使用中足矣。$Markdown$语法正是希望我们回归到内容本身。自从接触博客后，需要用到不少的$markdown$语法，同时算法相关的随笔需要借助数学语言表达，在此总结下$markdown$的$LaTeX$来排版数学公式。当教授让我们布置$word$文件报告，需要写数学公式时，直接在软件$typora$，将公式写好，再直接导出为$word$文件即..." }, { "title": "Codeforces Round#661 (Div. 3) D、E1题解", "url": "/posts/CF661(Div3)/", "categories": "Online Judge, Codeforces", "tags": "算法-构造, 算法-大顶堆, 算法-贪心", "date": "2020-08-06 22:21:00 +0800", "snippet": "D. Binary String To Subsequences #贪心 #构造题目链接题意给定一个$01$串$s$，完全分割成若干子序列(注意，不要混淆子串与子序列的概念)，其中的子序列不包含两个相邻的$0$或$1$$(eg:”0101”, “1010”)$。对$s$按这样的分割方式，最少能分出多少串子序列？同时，还要求输出$s$串中每一字符所在的分割出的子序列编号分析参考了官方题解的思路，我们可以定义两个数组为$now0$和$now1$，$now0$存下了当前以0为结尾的所有10子序列，$now1$反之。假定我们遇到$str[i]$为’$0$’，为了使分割的子序列数量越少越好，当然是..." }, { "title": "Leetcode 周赛#200 题解", "url": "/posts/LeetCode%E5%91%A8%E8%B5%9B200/", "categories": "Online Judge, LeetCode", "tags": "算法-模拟, 思维-分段统计极值, 算法-双指针, 算法-贪心", "date": "2020-08-04 00:10:00 +0800", "snippet": "1535 找出数组游戏的赢家 #模拟+优化题目链接题意给你一个由 不同 整数组成的整数数组 arr 和一个整数 k($1\\leq k\\leq1e9$) 。每回合游戏都在数组的arr[0] 和 arr[1]之间进行，比较两者大小，较大的元素将会取得这一回合的胜利并保留在位置 0 ，较小者移至数组的末尾。当一个整数赢得 k 个连续回合时，游戏结束，该整数就是比赛的赢家，现求该整数样例因此将进行 4 回合比赛，其中 5 是赢家，因为它连胜 2 回合分析观察$k$的数据范围，直接模拟肯定过不了。我们猜想当遍历到数组末端时，赢家已经确定下来。我们先假定$k&amp;lt;$数组长度，设存在$cur..." }, { "title": "Codeforces Round#660 (Div. 2) A、B、C题解", "url": "/posts/CF660(div2)/", "categories": "Online Judge, Codeforces", "tags": "算法-构造, 算法-深搜, 算法-贪心, 思维-逆向", "date": "2020-08-03 19:12:00 +0800", "snippet": "A. Captain Flint and Crew Recruitment #构造题目链接题意定义一类正整数，能够被$p*q$表示，其中$p、q(1&amp;lt;p&amp;lt;q)$均为素数，称之为$nearly\\ prime$ 。现要求判断整数$n$，是否能被4个不同整数之和表示，且其中至少三个整数为$nearly\\ prime$ (是则，输出YES否则输出NO)分析$ n = 31 = 2\\times7+2\\times5+2\\times3+1$，其中$14,10,6$为$nearly\\ prime$$ n = 32 = 2\\times3+2\\times5+2\\times7+2$..." }, { "title": "Educational Codeforces Round 92 (Rated for Div. 2) B、C题解", "url": "/posts/Educational-CF92-Div2/", "categories": "Online Judge, Codeforces", "tags": "算法-暴力, 思维-性质观察, 算法-贪心", "date": "2020-08-03 16:54:00 +0800", "snippet": "TAT 第一场codeforcesB. Array Walk #暴力 #贪心题目链接题意：有$a1, a2, …, an$ 个格子(每个格子有各自分数)，最初为1号格(初始分数为$a1$)，支持两种走法(经过的格子分数会相应累加)，只能走$k$步：①向右走。②向左走，但是每一次向左操作走完一格后不能再连续地向左移动，允许向左走的操作次数为$z$。现要求你走完k次后获得的最大分数。分析：参考了官方题解，假定我们有$t$次移动是向左的，那么剩下$k-t$次向右，我们知道遍历的格子在$[1, 1+k-2t]$的，即最终停留的位置一定为$1+k-2t$号格子(因为每一次的向左移动之后需要进行一次..." }, { "title": "我的第一篇博客", "url": "/posts/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/", "categories": "随笔杂谈与感悟, 感悟", "tags": "感悟, 杂谈", "date": "2020-08-01 21:41:00 +0800", "snippet": "十月10/06本蒟蒻终于$400$题啦！（大神勿喷qaq）10/04终于赶在国庆假期结束前写完了🥺1篇计网可行性报告、2篇毛概实践报告、1篇观后感、1篇工程实训报告（每篇1500+）九月09/27摘自@Lachel所写的推文： “先试着去做一些超出你目前能力范围的事情，探索一些落在你未知边界之外的东西，在这个过程中，你遇到什么问题，产生什么需求，再有针对性地去学习。” “最好的状态，一定不是为了学习而去学习，而是让自己变成一张网，不断去探索新的可能性，在这个过程中见招拆招，把网编织起来，让自己的能力和认知不断延伸、拓展，触及更多的领域。” “如同塔勒布在《反脆弱》里面写到的：一个系..." }, { "title": "「CSS知识精炼02」盒子模型、浮动、文档流、定位", "url": "/posts/LearningCSS-02/", "categories": "Web前端, HTML与CSS", "tags": "CSS", "date": "2020-07-20 20:04:00 +0800", "snippet": "七、文档流文档流(normal flow)——网页的基础(最底下的一层)，我们所创建的元素默认都是在文档流中进行排列。对于元素有两个状态：在文档流 或 脱离文档流。元素在文档流的特点： 块元素：会在页面中独占一行(自上向下垂直排列)，默认宽度为父元素的全部(撑满)，默认高度被(子元素)内容撑开。 行内元素：行内元素不会占页面的一行，只占自身的大小。它在页面中从左向右水平排列，若一行无法容纳下所有的行内元素，则元素会换到第二行继续自左向右排列。行内元素的默认宽度和高度都是被内容撑开。 创建外部容器时，应这样搭配 nav(div), div(div), ul(l..." }, { "title": "「CSS知识精炼01」简介、样式表、选择器", "url": "/posts/LearningCSS-01/", "categories": "Web前端, HTML与CSS", "tags": "CSS", "date": "2020-07-20 14:04:00 +0800", "snippet": "CSS（Cascading Style Sheets）代表 层叠样式表。其中，样式定义为如何显示HTML元素，它通常储存在样式表，将样式添加到HTML中，能够解决内容与表现分离的问题。由于网页是多层结构，通过CSS可分别为网页的每一层设置样式，而多个样式定义可层叠为一个。Chapter 1. 样式表的引入1.0 CSS属性书写顺序 布局定位属性：display（首个）/position/float/clear/visibility/overflow 自身属性：width/height/margin/padding/border/background 文本属性：color/font/..." }, { "title": "HTML5知识提炼", "url": "/posts/LearningHTML/", "categories": "Web前端, HTML与CSS", "tags": "HTML", "date": "2020-07-20 00:40:00 +0800", "snippet": "笔记大多是我从老师的课堂讲授中记录的，同时参考了W3school提供的资料。当然，笔记主要是记录个人认为容易遗忘或者有价值的，因此记录时不一定能够将所有知识点覆盖，或出现遗漏，术语上不一定标准规范。更加详细的知识点，可以去W3school或一些文档中查阅。待时间充裕，我也会进一步校对与补充。如果能发现其中的错误，望指正。大佬轻喷qaq一、网页的组成伯纳斯李建立万维网联盟(W3C)——为了制订网页开发的标准根据W3C标准，一个网页主要由三部分组成： 结构——HTML：用于描述页面的结构 表现——CSS：用于控制页面中元素的样式 行为——JavaScript：用于响应用户操作二、HTM..." }, { "title": "Writing a New Post", "url": "/posts/write-a-new-post/", "categories": "Blogging, Tutorial", "tags": "writing", "date": "2019-08-08 14:10:00 +0800", "snippet": "Naming and PathCreate a new file named YYYY-MM-DD-TITLE.EXTENSION and put it in the _posts/ of the root directory. Please note that the EXTENSION must be one of md and markdown.Front MatterBasically, you need to fill the Front Matter as below at the top of the post:---title: TITLEdate: YYYY-MM-DD..." }, { "title": "Text and Typography", "url": "/posts/text-and-typography/", "categories": "Blogging, Record", "tags": "typography", "date": "2019-08-08 11:33:00 +0800", "snippet": "This post is to show Markdown syntax rendering on Chirpy, you can also use it as an example of writing. Now, let’s start looking at text and typography.TitlesH1 - headingH2 - headingH3 - headingH4 - headingParagraphI wandered lonely as a cloudThat floats on high o’er vales and hills,When all at o..." } ]
